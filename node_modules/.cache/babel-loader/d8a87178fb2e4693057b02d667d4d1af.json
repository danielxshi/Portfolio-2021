{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/Github/Portfolio/src/components/ProjectDetails/Slider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport '../../style/modules/_slider.scss';\nimport SliderContent from \"../../components/ProjectDetails/SliderContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Slider(props) {\n  _s();\n\n  let sliderArr = [/*#__PURE__*/_jsxDEV(SliderContent, {\n    src: props.img1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 20\n  }, this), /*#__PURE__*/_jsxDEV(SliderContent, {\n    src: props.img2\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 70\n  }, this)];\n  const [state, setState] = useState({\n    activeIndex: 0\n  });\n  const {\n    activeIndex\n  } = state;\n  const [x, setX] = useState(0); // Next slide\n\n  const nextSlide = () => {\n    // Translate\n    x === -100 * (sliderArr.length - 1) ? setX(0) : setX(x - 100); // Return state\n\n    if (activeIndex === sliderArr.length - 1) {\n      return setState({\n        activeIndex: 0\n      });\n    }\n\n    setState({\n      activeIndex: activeIndex + 1\n    });\n  }; // Previous slide\n\n\n  const prevSlide = () => {\n    // Translate\n    x === 0 ? setX(-100 * (sliderArr.length - 1)) : setX(x + 100); // Return state\n\n    if (activeIndex === 0) {\n      x === 0 ? setX(-100 * (sliderArr.length - 1)) : setX(x - 100);\n      return setState({\n        activeIndex: sliderArr.length - 1\n      });\n    }\n\n    setState({\n      activeIndex: activeIndex - 1\n    });\n  }; // arraySize\n\n\n  var totalItems = sliderArr.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slide-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: [sliderArr.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slide\",\n          style: {\n            transform: `translateX(${x}%)`\n          },\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"prevSlide\",\n        onClick: prevSlide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"nextSlide\",\n        onClick: nextSlide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"slide-pg-count\",\n      children: [\"0\", activeIndex + 1, \" / 0\", totalItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Slider, \"J29VnNZScqYHYmKZJdf2iqOGO1Y=\");\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["/home/daniel/Documents/Github/Portfolio/src/components/ProjectDetails/Slider.js"],"names":["React","useState","SliderContent","Slider","props","sliderArr","img1","img2","state","setState","activeIndex","x","setX","nextSlide","length","prevSlide","totalItems","map","item","index","transform"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";  \nimport '../../style/modules/_slider.scss'\nimport SliderContent from \"../../components/ProjectDetails/SliderContent\"\n\n\nfunction Slider(props){\n  let sliderArr = [<SliderContent src={props.img1}></SliderContent>, <SliderContent src={props.img2}></SliderContent>];\n  const [state, setState] = useState({\n    activeIndex: 0\n  })\n\n  const { activeIndex } = state\n\n  const [x, setX] = useState(0)\n\n\n  // Next slide\n  const nextSlide = () => {\n\n    // Translate\n    x === -100 *(sliderArr.length-1) ? setX(0):setX(x - 100);\n\n    // Return state\n    if(activeIndex === sliderArr.length-1){\n\n      return setState({\n        activeIndex: 0\n      })\n    }\n\n    setState({\n      activeIndex: activeIndex + 1\n    })\n  };\n\n  // Previous slide\n  const prevSlide = () => {\n\n    // Translate\n    x === 0 ? setX(-100 * (sliderArr.length - 1)) : setX(x + 100);\n    \n    // Return state\n    if(activeIndex === 0){\n\n      x === 0 ? setX(-100 * (sliderArr.length - 1)) : setX(x - 100);\n      return setState({\n  \n        activeIndex: (sliderArr.length)-1\n        \n      })\n    }\n    setState({\n      activeIndex: activeIndex - 1\n    })\n  };\n\n\n  // arraySize\n  var totalItems = sliderArr.length;\n  return(\n    <div className=\"slide-container\">\n      <div className=\"slider\">\n        {sliderArr.map((item, index)=> {\n          return(\n            <div key={index} className=\"slide\" style={{transform: `translateX(${x}%)`}}>\n              {item}\n            </div>\n          );\n        })}\n          <button id=\"prevSlide\" onClick={prevSlide}>\n          {/* left */}\n          </button>\n          <button id=\"nextSlide\" onClick={nextSlide}>\n          {/* right */}\n          </button>\n      </div>\n      <p className=\"slide-pg-count\">\n        0{activeIndex + 1} /\n        0{totalItems}\n      </p> \n    </div>\n  );\n\n}\n\nexport default Slider;"]},"metadata":{},"sourceType":"module"}