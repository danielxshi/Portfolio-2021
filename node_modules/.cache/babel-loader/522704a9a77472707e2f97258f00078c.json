{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/Github/Portfolio/my-app/src/components/Navbar/DesktopNav.js\";\nimport React, { Component } from 'react';\nimport { MenuItems } from \"./MenuItems\";\nimport './Button.scss';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { NavLink } from 'react-router-dom';\nimport { TweenLite, TimelineLite } from 'gsap'; // or import TweenMax from 'gsap/TweenMax'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DesktopNav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clicked: false\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        clicked: !this.state.clicked\n      });\n    };\n\n    this.myTween = new TimelineLite({\n      paused: true\n    });\n    this.myElements = [];\n  }\n\n  componentDidMount() {\n    // use the node ref to create the animation\n    this.myTween.from(this.myElements, 1, {\n      y: 40\n    }, 1);\n    this.myTween.to(this.myElements, 0.5, {\n      x: 0,\n      autoAlpha: 1\n    }, 0.1).play();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        ref: div => this.myElement = div,\n        className: \"desktop-nav nav-grid-template overflow-wrap\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertical-desktop-nav-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vertical-nav-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"nav-logo\",\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                activeClassName: \"active\",\n                exact: true,\n                to: \"/\",\n                children: \"XIANG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"menu-icon\",\n              onClick: this.handleClick,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: this.state.clicked ? 'fas fa-times' : 'fas fa-bars'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: this.state.clicked ? 'nav-menu active' : 'nav-menu ',\n              children: [MenuItems.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"overflow-wrap underscore-cta \",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    ref: li => this.myElements[index] = li,\n                    to: \"/\" + item.href,\n                    href: item.href,\n                    smooth: true,\n                    spy: true,\n                    className: item.cName,\n                    children: item.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 45\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 41\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contactModal overflow-wrap\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  ref: a => this.myElements[index] = a,\n                  id: \"contactCTA\",\n                  onClick: this.props.onClick,\n                  children: \"CONTACT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DesktopNav;","map":{"version":3,"sources":["/home/daniel/Documents/Github/Portfolio/my-app/src/components/Navbar/DesktopNav.js"],"names":["React","Component","MenuItems","HashLink","Link","NavLink","TweenLite","TimelineLite","DesktopNav","constructor","props","state","clicked","handleClick","setState","myTween","paused","myElements","componentDidMount","from","y","to","x","autoAlpha","play","render","div","myElement","map","item","index","li","href","cName","title","a","onClick"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {MenuItems} from \"./MenuItems\"\nimport './Button.scss'\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { NavLink } from 'react-router-dom';\n\nimport { TweenLite, TimelineLite } from 'gsap' // or import TweenMax from 'gsap/TweenMax'\n\nclass DesktopNav extends Component {\n    constructor(props){\n        super(props);\n        this.myTween = new TimelineLite({paused: true});\n        this.myElements = [];\n      }\n    \n      componentDidMount(){\n        // use the node ref to create the animation\n        this.myTween.from(this.myElements, 1, {y: 40}, 1)\n        this.myTween.to(this.myElements, 0.5, {x: 0, autoAlpha: 1}, 0.1)\n        .play();\n      }\n    \n    state = {clicked: false}\n\n    handleClick = () => {\n        this.setState({clicked: !this.state.clicked})\n    }\n\n    render() {\n        return(\n            <header>\n                <nav \n                    ref={div => this.myElement = div} \n                    className=\"desktop-nav nav-grid-template overflow-wrap\"\n                >\n                    <div className=\"vertical-desktop-nav-container\">\n                        <div className=\"vertical-nav-content\">\n                            <div id=\"nav-logo\">\n                                <NavLink activeClassName=\"active\" exact to=\"/\">XIANG</NavLink>\n                            </div>\n                            <div className=\"menu-icon\" onClick={this.handleClick}>\n                                <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\n                            </div>\n                            <ul className={this.state.clicked ? 'nav-menu active' : 'nav-menu '}>\n                                {MenuItems.map((item, index) => {\n                                    return(\n                                        <li className =\"overflow-wrap underscore-cta \" key={index}>\n                                            <Link\n                                                ref={li => this.myElements[index] = li}\n                                                to={\"/\" +item.href} \n                                                href={item.href} smooth={true} \n                                                spy={true}  \n                                                className={item.cName}>\n                                                {item.title}\n                                            </Link>\n                                        </li>\n                                    )\n                                })}\n                            <div className=\"contactModal overflow-wrap\">\n                                <a \n                                                ref={a => this.myElements[index] = a}id=\"contactCTA\" onClick={this.props.onClick}>CONTACT</a>\n                            </div>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </header>\n        )\n    }\n}\n\nexport default DesktopNav;"]},"metadata":{},"sourceType":"module"}