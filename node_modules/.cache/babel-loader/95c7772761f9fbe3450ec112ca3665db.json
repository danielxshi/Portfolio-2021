{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/Github/Portfolio/my-app/src/components/Navbar/DesktopNav.js\";\nimport React, { Component } from 'react';\nimport { MenuItems } from \"./MenuItems\";\nimport './Button.scss';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { NavLink } from 'react-router-dom';\nimport { TweenLite } from 'gsap'; // or import TweenMax from 'gsap/TweenMax'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DesktopNav extends Component {\n  constructor(props) {\n    super(props); // reference to the DOM node\n\n    this.state = {\n      clicked: false\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        clicked: !this.state.clicked\n      });\n    };\n\n    this.myElement = null; // reference to the animation\n\n    this.myTween = null;\n  }\n\n  componentDidMount() {\n    // use the node ref to create the animation\n    this.myTween = TweenLite.to(this.myElement, 1, {\n      y: 100\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"desktop-nav nav-grid-template\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertical-desktop-nav-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vertical-nav-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"nav-logo\",\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                activeClassName: \"active\",\n                exact: true,\n                to: \"/\",\n                children: \"XIANG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"menu-icon\",\n              onClick: this.handleClick,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: this.state.clicked ? 'fas fa-times' : 'fas fa-bars'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: this.state.clicked ? 'nav-menu active' : 'nav-menu',\n              children: [MenuItems.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"underscore-cta overflow-wrap\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    ref: div => this.myElement = div,\n                    to: \"/\" + item.href,\n                    href: item.href,\n                    smooth: true,\n                    spy: true,\n                    className: item.cName,\n                    children: item.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 45\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 41\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contactModal\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  id: \"contactCTA\",\n                  onClick: this.props.onClick,\n                  children: \"CONTACT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DesktopNav;","map":{"version":3,"sources":["/home/daniel/Documents/Github/Portfolio/my-app/src/components/Navbar/DesktopNav.js"],"names":["React","Component","MenuItems","HashLink","Link","NavLink","TweenLite","DesktopNav","constructor","props","state","clicked","handleClick","setState","myElement","myTween","componentDidMount","to","y","render","map","item","index","div","href","cName","title","onClick"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {MenuItems} from \"./MenuItems\"\nimport './Button.scss'\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { NavLink } from 'react-router-dom';\n\nimport { TweenLite } from 'gsap' // or import TweenMax from 'gsap/TweenMax'\n\nclass DesktopNav extends Component {\n    constructor(props){\n        super(props);\n        // reference to the DOM node\n        this.myElement = null;\n        // reference to the animation\n        this.myTween = null;\n      }\n    \n      componentDidMount(){\n        // use the node ref to create the animation\n        this.myTween = TweenLite.to(this.myElement, 1, {y: 100});\n      }\n    \n    state = {clicked: false}\n\n    handleClick = () => {\n        this.setState({clicked: !this.state.clicked})\n    }\n\n    render() {\n        return(\n            <header>\n                <nav className=\"desktop-nav nav-grid-template\">\n                    <div className=\"vertical-desktop-nav-container\">\n                        <div className=\"vertical-nav-content\">\n                            <div id=\"nav-logo\">\n                                <NavLink activeClassName=\"active\" exact to=\"/\">XIANG</NavLink>\n                            </div>\n                            <div className=\"menu-icon\" onClick={this.handleClick}>\n                                <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\n                            </div>\n                            <ul className={this.state.clicked ? 'nav-menu active' : 'nav-menu'}>\n                                {MenuItems.map((item, index) => {\n                                    return(\n                                        <li className =\"underscore-cta overflow-wrap\" key={index}>\n                                            <Link \n                                            ref={div => this.myElement = div} \n                                                to={\"/\" +item.href} \n                                                href={item.href} smooth={true} \n                                                spy={true}  \n                                                className={item.cName}>\n                                                {item.title}\n                                            </Link>\n                                        </li>\n                                    )\n                                })}\n                            <div className=\"contactModal\">\n                                <a id=\"contactCTA\" onClick={this.props.onClick}>CONTACT</a>\n                            </div>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </header>\n        )\n    }\n}\n\nexport default DesktopNav;"]},"metadata":{},"sourceType":"module"}