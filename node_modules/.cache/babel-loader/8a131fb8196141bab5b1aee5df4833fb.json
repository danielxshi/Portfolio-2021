{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/Github/Portfolio/src/components/Navbar/DesktopNav.js\";\nimport React, { Component } from 'react';\nimport { MenuItems } from \"./MenuItems\";\nimport './Button.scss';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { NavLink } from 'react-router-dom';\nimport { TweenLite, TimelineLite } from 'gsap'; // or import TweenMax from 'gsap/TweenMax'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DesktopNav extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: false\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        clicked: !this.state.clicked\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"desktop-nav nav-grid-template\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertical-desktop-nav-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vertical-nav-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"nav-logo\",\n              className: \"overflow-wrap\",\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                activeClassName: \"active\",\n                exact: true,\n                to: \"/\",\n                children: \"D - PORTFOLIO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"menu-icon\",\n              onClick: this.handleClick,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: this.state.clicked ? 'fas fa-times' : 'fas fa-bars'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: this.state.clicked ? 'nav-menu active' : 'nav-menu ',\n              children: [MenuItems.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"overflow-wrap underscore-cta \",\n                  children: /*#__PURE__*/_jsxDEV(Link // ref={li => this.myElements[index] = li}\n                  , {\n                    to: \"/\" + item.href,\n                    href: item.href,\n                    smooth: true,\n                    spy: true,\n                    className: item.cName,\n                    children: item.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 45\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 41\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contactModal\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"overflow-wrap\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    ref: div => this.myElement = div,\n                    id: \"contactCTA\",\n                    onClick: this.props.onClick,\n                    children: \"CONTACT\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DesktopNav;","map":{"version":3,"sources":["/home/daniel/Documents/Github/Portfolio/src/components/Navbar/DesktopNav.js"],"names":["React","Component","MenuItems","HashLink","Link","NavLink","TweenLite","TimelineLite","DesktopNav","state","clicked","handleClick","setState","render","map","item","index","href","cName","title","div","myElement","props","onClick"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAO,eAAP;AACA,SAASC,QAAQ,IAAIC,IAArB,QAAiC,wBAAjC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,MAAxC,C,CAA+C;;;;AAE/C,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAkB/BQ,KAlB+B,GAkBvB;AAACC,MAAAA,OAAO,EAAE;AAAV,KAlBuB;;AAAA,SAoB/BC,WApB+B,GAoBjB,MAAM;AAChB,WAAKC,QAAL,CAAc;AAACF,QAAAA,OAAO,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAtB,OAAd;AACH,KAtB8B;AAAA;;AAwB/BG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AACI,QAAA,SAAS,EAAC,+BADd;AAAA,+BAGI;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,oCACI;AAAK,cAAA,EAAE,EAAC,UAAR;AAAmB,cAAA,SAAS,EAAC,eAA7B;AAAA,qCACI,QAAC,OAAD;AAAS,gBAAA,eAAe,EAAC,QAAzB;AAAkC,gBAAA,KAAK,MAAvC;AAAwC,gBAAA,EAAE,EAAC,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAK,cAAA,SAAS,EAAC,WAAf;AAA2B,cAAA,OAAO,EAAE,KAAKF,WAAzC;AAAA,qCACI;AAAG,gBAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC,OAAX,GAAqB,cAArB,GAAsC;AAApD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOI;AAAI,cAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB,iBAArB,GAAyC,WAAxD;AAAA,yBACKR,SAAS,CAACY,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5B,oCACI;AAAI,kBAAA,SAAS,EAAE,+BAAf;AAAA,yCACI,QAAC,IAAD,CACI;AADJ;AAEI,oBAAA,EAAE,EAAE,MAAKD,IAAI,CAACE,IAFlB;AAGI,oBAAA,IAAI,EAAEF,IAAI,CAACE,IAHf;AAGqB,oBAAA,MAAM,EAAE,IAH7B;AAII,oBAAA,GAAG,EAAE,IAJT;AAKI,oBAAA,SAAS,EAAEF,IAAI,CAACG,KALpB;AAAA,8BAMKH,IAAI,CAACI;AANV;AAAA;AAAA;AAAA;AAAA;AADJ,mBAAoDH,KAApD;AAAA;AAAA;AAAA;AAAA,wBADJ;AAYH,eAbA,CADL,eAeA;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,uCACI;AAAK,kBAAA,SAAS,EAAC,eAAf;AAAA,yCACA;AAAG,oBAAA,GAAG,EAAEI,GAAG,IAAI,KAAKC,SAAL,GAAiBD,GAAhC;AAAqC,oBAAA,EAAE,EAAC,YAAxC;AAAqD,oBAAA,OAAO,EAAE,KAAKE,KAAL,CAAWC,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAfA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAwCH;;AAjE8B;;AAoEnC,eAAef,UAAf","sourcesContent":["import React, {Component} from 'react';\nimport {MenuItems} from \"./MenuItems\"\nimport './Button.scss'\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { NavLink } from 'react-router-dom';\n\nimport { TweenLite, TimelineLite } from 'gsap' // or import TweenMax from 'gsap/TweenMax'\n\nclass DesktopNav extends Component {\n    // constructor(props){\n    //     super(props);\n    //     this.myTween = new TimelineLite({paused: true});\n    //     this.myElements = [];\n    //     this.myElement = null;\n    //   }\n    \n    //   componentDidMount(){\n    //     // use the node ref to create the animation\n    //     // !Remove the delay\n    //     this.myTween.from(this.myElements, 1, {y: -50}, 1)\n    //     this.myTween.to(this.myElements, 0.95, {x: 0, autoAlpha: 1}, 1)\n    //     this.myTween.from(this.myElement, 1, {y: -50}, 1)\n    //     this.myTween.to(this.myElement, 0.5, {x: 0, autoAlpha: 1}, 1)\n    //     .play();\n    //   }\n    \n    state = {clicked: false}\n\n    handleClick = () => {\n        this.setState({clicked: !this.state.clicked})\n    }\n\n    render() {\n        return(\n            <header>\n                <nav \n                    className=\"desktop-nav nav-grid-template\"\n                >\n                    <div className=\"vertical-desktop-nav-container\">\n                        <div className=\"vertical-nav-content\">\n                            <div id=\"nav-logo\" className=\"overflow-wrap\">\n                                <NavLink activeClassName=\"active\" exact to=\"/\">D - PORTFOLIO</NavLink>\n                            </div>\n                            <div className=\"menu-icon\" onClick={this.handleClick}>\n                                <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\n                            </div>\n                            <ul className={this.state.clicked ? 'nav-menu active' : 'nav-menu '}>\n                                {MenuItems.map((item, index) => {\n                                    return(\n                                        <li className =\"overflow-wrap underscore-cta \" key={index}>\n                                            <Link\n                                                // ref={li => this.myElements[index] = li}\n                                                to={\"/\" +item.href} \n                                                href={item.href} smooth={true} \n                                                spy={true}  \n                                                className={item.cName}>\n                                                {item.title}\n                                            </Link>\n                                        </li>\n                                    )\n                                })}\n                            <div className=\"contactModal\">\n                                <div className=\"overflow-wrap\">\n                                <a ref={div => this.myElement = div} id=\"contactCTA\" onClick={this.props.onClick}>CONTACT</a>\n\n                                </div>\n                            </div>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </header>\n        )\n    }\n}\n\nexport default DesktopNav;"]},"metadata":{},"sourceType":"module"}